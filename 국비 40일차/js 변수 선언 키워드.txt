+ js 변수 선언 키워드

 - var 
	기본 변수 선언 키워드
	같은 이름의 변수를 여러 번 선언해도 에러가 나지 않는다
	하나의 변수로 취급한다

	ex)	var data = 10;
		var data = 20;
		-> 에러 없음, data 변수가 10초기화 이후 20으로 대입함


 - let 
	추가된 변수 선언 키워드 (ECMA Script 6(ES6)에서 추가)
	같은 이름의 변수로 여러 번 선언할 수 없다
	
	ex)	let data = 10;
		let data = 20; // 에러


 - const
	추가된 변수 선언 키워드 (ECMA Script 6(ES6)에서 추가)
	let과 동작은 비슷함	

	변수의 초기화는 가능하지만 이후에 대입이 되지 않는 변수
	(자바의 final변수와 비슷함)

	변수값의 초기화는 필수, 초기화 하지 않으면 에러 발생

	ex)	const data; // 에러 초기화하지 않음
		const data =30;

+ 적용되는 스코프
 - var : function scope
 - let, const : function scope, block scope

 - var 변수는 함수 내부에서만 지역스코프 특성이 부여된다
 - let, const는 블록에서 만들어진 변수라면 지역스코프 특성이 부여된다.
 	-> let, const는 익명블록, 제어문, 함수 등등에서 지역스코프가 적용된다


+ 호이스팅 적용

 - var, let, const 모두 호이스팅이 발생한다
 - var는 선언코드 이전에 변수에 접근 가능하다
 - let, const는 선언코드 이전에 변수에 접근할 수 없도록 금지하고 있다.( 에러 )