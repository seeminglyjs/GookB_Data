+ EL, Expression Language, 표현 언어

 - jsp에서 값을 출력하는 코드를 쉽게 사용할 수 있도록 만들어진 문법

 - 표현식 (Expression tag, <%= %>)태그와 비슷한 역할을 담당한다

 - 주로 컨텍스트 정보를 다룰 때 사용한다

 - jstl태그 라이브러리와 함께 사용하기에 적합하다


+ EL 구문 형식
	${ }
	
	ex ${10 + 20}
	-> <%= 10+20 %>
	-> 브라우저에 30이 출력된다

+ EL 연산자
 - 산술:  +, -, *, %, div, mod

 - 관계: ==, eq, !=, ne, <, lt, >, gt, <=, le, >=, ge

 - 논리: &&, and, ||, or, !, not

 - 조건: (조건식)? data1:data2

 - null검사: empty 대상

	ex) ${empty obj}
	-> obj 객체가 null이라면 true반환
	
	ex) ${not empty obj}
	-> obj객체가 null이 아니라면 true 반환

+ EL 내장 객체
 - pageContext : jsp 내장객체 pageContext와 동일

 - pageScope : page컨텍스트 영역의 정보에 접근할 수 있는 객체
 - requestScope : reuqest컨텍스트 영역의 정보에 접근할 수 있는 객체
 - sessionScope : session컨텍스트 영역의 정보에 접근할 수 있는 객체
 - applicationScope : application컨텍스트 영역의 정보에 접근할 수 있는 객체

	ex) <%=request.getAttribute("data") %>
	-> ${requestScope.data}
	-> ${data }
	** EL의 scope 객체는 생략 가능하다.

 - param : 전달파라미터에 접근할 수 있도록 하는 객체
	ex) <%=request.getParameter("data) %>
	-> ${param.data}

 - paramValues: request.getParameterValues("name")의 기능을 수행하는 객체
	ex) //checkbox
	 ${paramValues.genre[0] }
	 ${paramValues.genre[1] }
	 -> genre라는 name으로 전달된 checkbox선택값들 활용하기

 - header: 요청 header 정보에 접근할 수 있는 객체
	ex) <%=request.getHeader("host") %>
	 -> ${header.hose}

 - headerValues: 같은 이름의 header정보에 접근할 수 있는 객체
	ex) request.getHeaderValues("이름") 과 같은 기능을 수행한다

 - cookie: request.getCookie() 로 구한 Cookie[] 를 Map으로 사용할 수 있도록
	제공한다

 - initParam: application.getInitParam("name")의 정보를 사용할 수 있는 객체
	** 초기화파라미터, Initial Parameter
	웹 어플리케이션에 설정된 기본 파라미터(변수, 설정값)