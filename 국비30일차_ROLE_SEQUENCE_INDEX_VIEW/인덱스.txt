+ 인덱스, INDEX

- 테이블의 검색속도 향상을 위한 데이터베이스 객체
- 테이블의 컬럼을 기준으로 적용한다.
- 한번에 여러 개의 컬럼을 묶어서 적용할 수도 있다.

- 테이블의 컬럼의 의존적이지만 테이블과는 독립적으로 생성한다.

- UNIQUE KEY (유일키, UK), PRIMARY KEY(기본키, PK 제약 사항이 걸린컬럼은
	자동으로 인덱스를 생성한다.


+ 인덱스 장점
 - 테이블에 대한 전체탐색을 줄인다. 테이블 검색속도가 빠르다.

+ 인덱스 단점
 - 인덱스 객체를 생성하는 시간이 필요하다
 - 인덱스 객체를 생성하는데 별도의 공간이 필요하다.

 - 검색 기능의 성능은 향상시키지만 추가, 삭제 수정에는 도움이 안됨
	-> 추가, 삭제, 수정이 발생하면 인덱스를 다시 구축해야한다.

+ 인덱스 생성이 불필요한 경우
 - 데이터가 적을 때 ( 만 건 이하)

 - 해당 테이블의 SELECT 보다 INSERT, UPDATE, DELETE 가 빈번한 경우
 - 인덱스탐색으로 조회되는 결과가 전체 행의 상당 부분을 차지할 때
	- - -> 전체 데이터의 약 15 % 

+ 인덱스 생성이 필요한 경우
 - 데이터가 많을 때( 만 건 이상)
 
 - WHERE 구문에서 조건으로 특정 컬럼 비교를 많이 수행할 때

 - JOIM 구문에서 조인조건으로 사용되는 특정 컬럼이 존재할 때

+ 인덱스 종류
 - Non_Unique INDEX : 중복 허용 인덱스
	CREATE INDEX 인덱스명 ON 테이블명(컬럼);

 - Unique INDEX : 중복 비허용 인덱스
	CREATE UNIQUE INDEX 인덱스명 ON 테이블명 ( 컬럼);

 - Composite INDEX : 복합 컬럼 인덱스
	CREATE [UNIQUE ]  INDEX 인덱스명 ON 테이블명 (컬럼1, 컬럼2 . . )
	-> 여러개의 컬럼을 묶어서 인덱스로 지정한다.
	-> 지정한 컬럼을 순서대로 모두 이용하여 조회할 때 인덱스스캔이 작동된다.


+ 인덱스 재성성 구문
	ALTER INDEX 인덱스명 REBUILD;
	
+ 인덱스 삭제 구문
	DROP INDEX 인덱스명;

+ 인덱스 관련 자료사전
	user_indexes -- 인덱스 정보
 	user_ind_columns -- 인덱스 컬럼 정보





