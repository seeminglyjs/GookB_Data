모듈 사이에서의 컴포넌트들의 상호 작용을 테스트 하는 것으로 어플리케이션이 전체적으로 완성된 이후에 테스트를 진행하는 것을 말합니다.
-----------------------------------------------------------
시스템테스트
---------------------------------------------------------






@Controller
public class TestController {

private static final Logger logger = LoggerFactory.getLogger(TestController.class);

//게시판 접근시 해당 게시판의 파라미터 정보와 이에 따른
//게시판 존재여부를 기능 모듈로 나누어서 테스트를 진행할 예정
@Before
@RequestMapping(value = "/board/test1")
public void testParam(HttpServletRequest request){
	//상세보기 접근시 해당 게시판 번호가 정상적으로 들어오는지 체크
	//파라미터 형변환 체크
	int boardNo = 0;
	try{
		boardNo = Integer.parseInt(request.getParameter("boardNo"));
	}catch(Exception e){
		looger.info("형변환 오류 발생")
		boardNo = 0;
	}

	looger.info("boardNo{}", boardNo)
	if(boardNo == 0){
		looger.info("파라미터 확인 필요")
	}else{
		looger.info("파라미터 정상")
	}


	//게시판 파라미터 확인 후 해당 게시글 존재하는지 체크
	@Test
	public Board searchBoard(boardNo){
		Board board = new Board();
		board = boardService.getDetailBoard(boardNo);	
		if(board == null){
			looger.info("해당 게시글 존재하지 않음 DB 확인 필요")
		}else{
			looger.infi("게시글 존재함 로직 구현 가능함")
		}
	}

	}
}
---------------------------------------------------------------
1. 단위테스트 : 소프트웨어의 각 단위별로 테스트하는 것으로 기능별 모듈화 하여 테스트를 진행합니다.

2. 통합테스트 : 모듈 사이에서의 컴포넌트들의 상호 작용을 테스트 하는 것으로 어플리케이션이 전체적으로 완성된 이후에 테스트를 진행하는 것을 말합니다.

3.시스템테스트 : 통합시스템에서의 기능이 시스템에서 정상 수행되는지 확인하는 테스트입니다.

4.인수테스트 : 개발자가 아닌 사용자가 실제 사용자 환경 및 고객입장에서 하는 테스트입니다.