※ 제네릭 Generic
	클래스 또는 메소드에서 사용되는 다양한 데이터타입을
	일반화시켜 프로그래밍하는 방법
	
	클래스나 메소드를 정의할 때 코드 재사용성이 높아진다.

	-타입 안전성이 제공된다
	 개발자가 사용하려는 데이터타입만 사용할 수 있도록 제한한다
	 다른 데이터타입을 사용하면 문법 에러가 발생

	-특정 데이터타입으로 고정하여 사용하므로 불필요한 형변환이 줄어든다.

	

※ 제네릭 클래스
	제네릭이 적용된 클래스
	[접근제한자] class 클래스면 < T1, T2 . . .> {
}

	제네릭 클래스를 이용하여 객체를 선언하고 생성할 때 타입 파라미터를 결정해주는 것이 좋다

	만약 타입파라미터를 작성하지 않으면 Object로 처리된다.



※ 제네릭 메소드
	메소드 내에서 사용할 수 있는 데이터타입을 일반화시켜 정의한다

	[접근제한자] < T1, T2 . . .> [리턴타입] 메소드명(매개변수){
}

	메소드의 리턴타입, 매개변수타입, 지역변수타입으로 제네릭 사용가능

	메소드를 호출하면서 타입파라미터를 결정할 수 있다.

	매개변수로 제네릭타입을 사용하고 있으면 전달인자 타입에 따라자동으로 결정된다.
