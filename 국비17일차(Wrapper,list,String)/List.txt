※ List 인터페이스
	-리스트 자료구조의 최상위 부모 인터페이스
	
	- 데이터를 일려로 배치하는 자료구조
	-> 선형구조
	

	-요소(Element)들을 인데스(index)로 관리한다
	
	-배열은 생성되면서 요소를 저장할 수 있는 크기가 결정된다
	
	리스트는 요소가 추가될 떄마다 저장공간을 확장시키는 방식이다
	
	데이터를 리스트에 추가한 순서를 유지한다
	
	배열과 비슷한 구조를 가진다


	inteface List의 구현체
	
============================================================
	class ArrayList
		단순 연결 리스트
		배열과 흡사
		배열과 달리 요소를 저장하는 공간의 크기를 확장하거나 축소할 수 있다.
		빠른 편이다.
		(배열에 비해서 크게 느리지 않다)
		단반향 포이터를 사용한다.	

** 단반향 포인터의 단점
	중간 삭제, 중간삽입이 빈번할 경우 비효율적이다.
	
============================================================
	class LinkedList
		양방향 연결 리스트		
		양방향 포인터를 사용한다

** 양방향 포인터의 장점
	중간삭제, 중간삽입에 어울린다.
	
				
============================================================
	class Vector
		ArrayList와 같은 구조 같은 사용법
		동기화 처리도이 Thread -safe 하다
	