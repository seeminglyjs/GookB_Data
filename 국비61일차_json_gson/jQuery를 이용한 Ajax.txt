+ jQuery를 이용한 Ajax

 - xhr객체를 이용한 순수 자바스크립트 Ajax는 코드는 크로스브라우징이  지원되지 않는다

 - xhr객체를 생성하는 코드를 작성할 때 불편함이 있다.

 - jQuery Ajax API 는 크로스브라우징을 지원한다

 - 응답데이터를 jQuery DOM을 이용하여 손쉽게 적용할 수 있다

 + Jquery Ajax API

 - $객체.load( url [,data] [,complete] );

 - $.get( url, [,data] [,success] [,dataType]);

 - $.post( url, [,data] [,success] [,dataType]);

 - $.ajax(settings);

------------------------------------------------------------------

+ jQuery Ajax API 01 - $객체.load()

 - $객체.load(url [,data] [,complete]);
	ajax요청의 결과로 받은 응답데이터를 지정된 객체에 적용한다
	-> 응답데이터의 형식을 HTML데이터로 많이 활용한다

	url : ajax통신을 수행할 url
		뒤에 쿼리스트링을 붙여서 GET Method통신에 사용된다

	data : ajax통신에 필용한 전달파라미터를 지정한다
		String타입 또는 PlainObject(JSON Object)

		String타입 - GET 통신으로 처리됨
		PlainObject타입 - POST통신으로 처리됨

	complete : 
		요청/응답 완료 후에 추가 작업을 수행하도록 작성하는 callback
		function(
		 String responseText //응답데이터
		 ,String textStatus //응답상태 메시지
		 ,jqXHR jqXHR // jQuery스타일로 변환시킨 XHR객체
		)

------------------------------------------------------------------

+ jQuery Ajax API 02  -$.get(), $.post()

 - $.get(url, [,data] [,success] [,dataType]);
 - $.post(url, [,data] [,success] [,dataType]);

	url :	AJAX 통신을 수행한 URL

	data :	전달 파라미터
		String타입 또는 PlainObject

	success :
		요청완료 후 성공적인 응답일 경우 호출되는 콜백함수
		function(
		 Object data // 응답 데이터
		 , String textStatus // 응답 상태 메시지
		 , jqXHR jqXHR // jQuery XHR객체

	dataType
		응답받은 데이터의 데이터타입을 지정한다
		응답 받은 데이터르 지정된 데이터타입으로 파싱한다
		응답받을 데이터의 기대되는 데이터타입을 지정한다

		"xml", "json", "script","text","html"
		주로 "json" 이나 "html" 을 적용한다
	



