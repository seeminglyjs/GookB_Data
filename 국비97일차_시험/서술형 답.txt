  <filter>
    <filter-name>KoreaEncodingFilter</filter-name>
    <filter-class>
	filter.EncodingFilter
    </filter-class>
    
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    
    <init-param>
    <param-name>forceEncoding</param-name>
    <param-value>true</param-value>
    </init-param>
  </filter>

  <filter-mapping>
    <filter-name>KoreaEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>





utf-8 인코딩 필터를 적용하는 이유는 사용자가 접근하는 url 에 한글인코딩(urf-8)을 설정하지 않으면, 한글 텍스트가 깨져 알아볼 수 없는 형태의 문자열로 출력되기 때문이다.​




=========================================================
 - cacheEnabled : 매퍼에 설정된 캐시를 사용 여부를 결정하는 옵션

 - jdbcTypeForNull : 지정한 타입에 대하여 null값을 처리여부를 설정하는 옵션

 - mapUnderscoreToCamelCase : resultMap으로 따로 dto를 재정의 하지 않아도 자동으로 SnakeCase를  CamelCase 로 변환해준다.

=========================================================
	<select id="findAdultMan" resultType="HEALTHCLUB">
		SELECT * FROM HEALTHCLUB WHERE BALCKL != ‘ACTIVE’
		<choose>
			<when test="!BALCKL.equals('ACTIVE')">
			AND #{age} > 19
			</when>
			
			<when test="!BALCKL.equals('ACTIVE')">
			AND #{gender} == 'M'
			</when>
			
			<otherwise>
			AND #{period} > 90	
			</otherwise>
			
		</choose>
	</select>
=========================================================

<setting name="jdbcTypeForNull" value="NULL"/>


=========================================================
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>