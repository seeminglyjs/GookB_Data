+ 로드 밸런스란

	로드밸런서는 서버에 가해지는 부하(=로드)를 분산(=밸런싱)해주는 장치 또는 기술을 통칭합니다. 	클라이언트와 서버풀(Server Pool, 분산 네트워크를 구성하는 서버들의 그룹) 사이에 위치하며, 
	한 대의 서버로 부하가 집중되지 않도록 트래픽을 관리해 
	각각의 서버가 최적의 퍼포먼스를 보일 수 있도록 합니다.

	그렇다면 로드밸런싱은 모든 경우에 항상 필요할까요?
	로드밸런싱은 여러 대의 서버를 두고 서비스를 제공하는 
	분산 처리 시스템에서 필요한 기술입니다.

	서비스의 제공 초기 단계라면 적은 수의 클라이언트로 인해 
	서버 한 대로 요청에 응답하는 것이 가능합니다. 
	하지만 사업의 규모가 확장되고, 클라이언트의 수가 늘어나게 되면 
	기존 서버만으로는 정상적인 서비스가 불가능하게 됩니다. 
	이처럼 증가한 트래픽에 대처할 수 있는 방법은 크게 두 가지

-------------------------------------
	Scale-up의 경우 서버 자체의 성능을 확장하는 것을 의미합니다. 
	비유하자면 CPU가 i3인 컴퓨터를 i7으로 업그레이드하는 것과 같습니다. 
	
	반면 Scale-out의 경우 기존 서버와 동일하거나 낮은 성능의 서버를 두 대 이상 증설하여 
	운영하는 것을 의미합니다. 
	CPU가 i3인 컴퓨터를 여러 대 추가 구입해 운영하 것에 비유할 수 있습니다.
	Scale-out의 방식으로 서버를 증설하기로 결정했다면 
	여러 대의 서버로 트래픽을 균등하게 분산해주는 로드밸런싱이 반드시 필요합니다.
-------------------------------------

	다양한 로드밸런싱 알고리즘
	• 라운드로빈 방식(Round Robin Method)
	서버에 들어온 요청을 순서대로 돌아가며 배정하는 방식입니다. 
	클라이언트의 요청을 순서대로 분배하기 때문에 여러 대의 서버가 동일한 스펙을 갖고 있고, 
	서버와의 연결(세션)이 오래 지속되지 않는 경우에 활용하기 적합합니다.

	• 가중 라운드로빈 방식(Weighted Round Robin Method)
	각각의 서버마다 가중치를 매기고 가중치가 높은 서버에 
	클라이언트 요청을 우선적으로 배분합니다. 
	주로 서버의 트래픽 처리 능력이 상이한 경우 사용되는 부하 분산 방식입니다. 
	예를 들어 A라는 서버가 5라는 가중치를 갖고 B라는 서버가 2라는 가중치를 갖는다면, 
	로드밸런서는 라운드로빈 방식으로 A 서버에 5개 B 서버에 2개의 요청을 전달합니다.

	• IP 해시 방식(IP Hash Method)
	클라이언트의 IP 주소를 특정 서버로 매핑하여 요청을 처리하는 방식입니다. 
	사용자의 IP를 해싱해
	(Hashing, 임의의 길이를 지닌 데이터를 고정된 길이의 데이터로 매핑하는 것, 또는 그러한 함수) 	로드를 분배하기 때문에 사용자가 항상 동일한 서버로 연결되는 것을 보장합니다. 

	• 최소 연결 방식(Least Connection Method)
	요청이 들어온 시점에 가장 적은 연결상태를 보이는 서버에 우선적으로 트래픽을 배분합니다. 
	자주 세션이 길어지거나, 서버에 분배된 트래픽들이 일정하지 않은 경우에 적합한 방식입니다.

	• 최소 리스폰타임(Least Response Time Method)
	서버의 현재 연결 상태와 응답시간
	(Response Time, 서버에 요청을 보내고 최초 응답을 받을 때까지 소요되는 시간)
	을 모두 고려하여 트래픽을 배분합니다. 
	가장 적은 연결 상태와 가장 짧은 응답시간을 보이는 서버에 
	우선적으로 로드를 배분하는 방식입니다.
----------------------------------------------
	L4 로드밸런서는 네트워크 계층(IP, IPX)이나 
	트랜스포트 계층(TCP, UDP)의 정보를 바탕으로 로드를 분산합니다. 
	IP주소나 포트번호, MAC주소, 전송 프로토콜에 따라 트래픽을 나누는 것이 가능합니다.

	반면 L7 로드밸런서의 경우 애플리케이션 계층(HTTP, FTP, SMTP)에서 로드를 분산하기 때문에 	HTTP 헤더, 쿠키 등과 같은 사용자의 요청을 기준으로 특정 서버에 트래픽을 분산하는 것이 가능합니다. 
	쉽게 말해 패킷의 내용을 확인하고 
	그 내용에 따라 로드를 특정 서버에 분배하는 것이 가능한 것입니다. 
	URL에 따라 부하를 분산시키거나, 
	HTTP 헤더의 쿠키값에 따라 부하를 분산하는 등 
	클라이언트의 요청을 보다 세분화해 서버에 전달할 수 있습니다. 
	또한 L7 로드밸런서의 경우 특정한 패턴을 지닌 바이러스를 감지해 네트워크를 보호할 수 있으며, 	DoS/DDoS와 같은 비정상적인 트래픽을 필터링할 수 있어 
	네트워크 보안 분야에서도 활용되고 있습니다.

